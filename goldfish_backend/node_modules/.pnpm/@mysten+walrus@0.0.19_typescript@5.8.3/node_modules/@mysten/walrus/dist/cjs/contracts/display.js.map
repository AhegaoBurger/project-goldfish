{
  "version": 3,
  "sources": ["../../../src/contracts/display.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { bcs } from '@mysten/sui/bcs';\nimport type { Transaction } from '@mysten/sui/transactions';\n\nimport * as object_bag from './deps/0x0000000000000000000000000000000000000000000000000000000000000002/object_bag.js';\nimport * as object from './deps/0x0000000000000000000000000000000000000000000000000000000000000002/object.js';\nimport { normalizeMoveArguments } from './utils/index.js';\nimport type { RawTransactionArgument } from './utils/index.js';\n\nexport function ObjectDisplay() {\n\treturn bcs.struct('ObjectDisplay', {\n\t\tid: object.UID(),\n\t\tinner: object_bag.ObjectBag(),\n\t});\n}\nexport function PublisherKey() {\n\treturn bcs.struct('PublisherKey', {\n\t\tdummy_field: bcs.bool(),\n\t});\n}\nexport function init(packageAddress: string) {\n\tfunction create(options: { arguments: [RawTransactionArgument<string>] }) {\n\t\tconst argumentsTypes = [\n\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000002::package::Publisher',\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'display',\n\t\t\t\tfunction: 'create',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction init_blob_display(options: { arguments: [RawTransactionArgument<string>] }) {\n\t\tconst argumentsTypes = [\n\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000002::package::Publisher',\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'display',\n\t\t\t\tfunction: 'init_blob_display',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction init_storage_display(options: { arguments: [RawTransactionArgument<string>] }) {\n\t\tconst argumentsTypes = [\n\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000002::package::Publisher',\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'display',\n\t\t\t\tfunction: 'init_storage_display',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction init_staked_wal_display(options: { arguments: [RawTransactionArgument<string>] }) {\n\t\tconst argumentsTypes = [\n\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000002::package::Publisher',\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'display',\n\t\t\t\tfunction: 'init_staked_wal_display',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\treturn { create, init_blob_display, init_storage_display, init_staked_wal_display };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,iBAAoB;AAGpB,iBAA4B;AAC5B,aAAwB;AACxB,mBAAuC;AAGhC,SAAS,gBAAgB;AAC/B,SAAO,eAAI,OAAO,iBAAiB;AAAA,IAClC,IAAI,OAAO,IAAI;AAAA,IACf,OAAO,WAAW,UAAU;AAAA,EAC7B,CAAC;AACF;AACO,SAAS,eAAe;AAC9B,SAAO,eAAI,OAAO,gBAAgB;AAAA,IACjC,aAAa,eAAI,KAAK;AAAA,EACvB,CAAC;AACF;AACO,SAAS,KAAK,gBAAwB;AAC5C,WAAS,OAAO,SAA0D;AACzE,UAAM,iBAAiB;AAAA,MACtB;AAAA,IACD;AACA,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,eAAW,qCAAuB,QAAQ,WAAW,cAAc;AAAA,IACpE,CAAC;AAAA,EACH;AACA,WAAS,kBAAkB,SAA0D;AACpF,UAAM,iBAAiB;AAAA,MACtB;AAAA,IACD;AACA,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,eAAW,qCAAuB,QAAQ,WAAW,cAAc;AAAA,IACpE,CAAC;AAAA,EACH;AACA,WAAS,qBAAqB,SAA0D;AACvF,UAAM,iBAAiB;AAAA,MACtB;AAAA,IACD;AACA,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,eAAW,qCAAuB,QAAQ,WAAW,cAAc;AAAA,IACpE,CAAC;AAAA,EACH;AACA,WAAS,wBAAwB,SAA0D;AAC1F,UAAM,iBAAiB;AAAA,MACtB;AAAA,IACD;AACA,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,eAAW,qCAAuB,QAAQ,WAAW,cAAc;AAAA,IACpE,CAAC;AAAA,EACH;AACA,SAAO,EAAE,QAAQ,mBAAmB,sBAAsB,wBAAwB;AACnF;",
  "names": []
}
