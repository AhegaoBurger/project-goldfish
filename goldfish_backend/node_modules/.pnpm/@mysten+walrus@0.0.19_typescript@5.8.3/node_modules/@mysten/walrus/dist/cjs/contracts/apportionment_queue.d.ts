import type { BcsType } from '@mysten/sui/bcs';
import type { Transaction } from '@mysten/sui/transactions';
import type { RawTransactionArgument } from './utils/index.js';
export declare function ApportionmentQueue<T0 extends BcsType<any>>(...typeParameters: [T0]): BcsType<{
    entries: {
        priority: {
            pos0: string;
        };
        tie_breaker: string;
        value: T0 extends BcsType<infer U, any> ? U : never;
    }[];
}, {
    entries: Iterable<{
        priority: {
            pos0: string | number | bigint;
        };
        tie_breaker: string | number | bigint;
        value: T0 extends BcsType<any, infer U_1> ? U_1 : never;
    }> & {
        length: number;
    };
}>;
export declare function Entry<T0 extends BcsType<any>>(...typeParameters: [T0]): BcsType<{
    priority: {
        pos0: string;
    };
    tie_breaker: string;
    value: T0 extends BcsType<infer U, any> ? U : never;
}, {
    priority: {
        pos0: string | number | bigint;
    };
    tie_breaker: string | number | bigint;
    value: T0 extends BcsType<any, infer U_1> ? U_1 : never;
}>;
export declare function init(packageAddress: string): {
    _new: (options: {
        arguments: [];
        typeArguments: [string];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    pop_max: (options: {
        arguments: [RawTransactionArgument<string>];
        typeArguments: [string];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    insert: <T0 extends BcsType<any>>(options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<string>, RawTransactionArgument<number | bigint>, RawTransactionArgument<T0>];
        typeArguments: [string];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    bubble_down: (options: {
        arguments: [RawTransactionArgument<string[]>];
        typeArguments: [string];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    bubble_up: (options: {
        arguments: [RawTransactionArgument<string[]>];
        typeArguments: [string];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    higher_priority_than: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<string>];
        typeArguments: [string];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
};
