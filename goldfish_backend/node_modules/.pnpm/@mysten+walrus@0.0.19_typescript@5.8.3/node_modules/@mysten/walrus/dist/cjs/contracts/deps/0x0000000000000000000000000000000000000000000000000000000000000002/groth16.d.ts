export declare function Curve(): import("@mysten/sui/bcs").BcsType<{
    id: number;
}, {
    id: number;
}>;
export declare function PreparedVerifyingKey(): import("@mysten/sui/bcs").BcsType<{
    vk_gamma_abc_g1_bytes: number[];
    alpha_g1_beta_g2_bytes: number[];
    gamma_g2_neg_pc_bytes: number[];
    delta_g2_neg_pc_bytes: number[];
}, {
    vk_gamma_abc_g1_bytes: Iterable<number> & {
        length: number;
    };
    alpha_g1_beta_g2_bytes: Iterable<number> & {
        length: number;
    };
    gamma_g2_neg_pc_bytes: Iterable<number> & {
        length: number;
    };
    delta_g2_neg_pc_bytes: Iterable<number> & {
        length: number;
    };
}>;
export declare function PublicProofInputs(): import("@mysten/sui/bcs").BcsType<{
    bytes: number[];
}, {
    bytes: Iterable<number> & {
        length: number;
    };
}>;
export declare function ProofPoints(): import("@mysten/sui/bcs").BcsType<{
    bytes: number[];
}, {
    bytes: Iterable<number> & {
        length: number;
    };
}>;
