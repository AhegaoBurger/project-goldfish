import type { BcsType } from '@mysten/sui/bcs';
export declare function LinkedTable<T0 extends BcsType<any>>(...typeParameters: [T0]): BcsType<{
    id: {
        id: string;
    };
    size: string;
    head: any;
    tail: any;
}, {
    id: {
        id: string | Uint8Array<ArrayBufferLike>;
    };
    size: string | number | bigint;
    head: any;
    tail: any;
}>;
export declare function Node<T0 extends BcsType<any>, T1 extends BcsType<any>>(...typeParameters: [T0, T1]): BcsType<{
    prev: any;
    next: any;
    value: T1 extends BcsType<infer U, any> ? U : never;
}, {
    prev: any;
    next: any;
    value: T1 extends BcsType<any, infer U_1> ? U_1 : never;
}>;
