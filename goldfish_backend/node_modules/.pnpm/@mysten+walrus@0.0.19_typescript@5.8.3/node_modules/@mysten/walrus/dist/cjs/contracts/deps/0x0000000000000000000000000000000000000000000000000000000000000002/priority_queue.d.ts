import type { BcsType } from '@mysten/sui/bcs';
export declare function PriorityQueue<T0 extends BcsType<any>>(...typeParameters: [T0]): BcsType<{
    entries: {
        priority: string;
        value: T0 extends BcsType<infer U, any> ? U : never;
    }[];
}, {
    entries: Iterable<{
        priority: string | number | bigint;
        value: T0 extends BcsType<any, infer U_1> ? U_1 : never;
    }> & {
        length: number;
    };
}>;
export declare function Entry<T0 extends BcsType<any>>(...typeParameters: [T0]): BcsType<{
    priority: string;
    value: T0 extends BcsType<infer U, any> ? U : never;
}, {
    priority: string | number | bigint;
    value: T0 extends BcsType<any, infer U_1> ? U_1 : never;
}>;
