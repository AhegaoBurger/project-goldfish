import type { Transaction } from '@mysten/sui/transactions';
import type { RawTransactionArgument } from './utils/index.js';
export declare function INIT(): import("@mysten/sui/bcs").BcsType<{
    dummy_field: boolean;
}, {
    dummy_field: boolean;
}>;
export declare function InitCap(): import("@mysten/sui/bcs").BcsType<{
    id: {
        id: string;
    };
    publisher: {
        id: {
            id: string;
        };
        package: string;
        module_name: string;
    };
}, {
    id: {
        id: string | Uint8Array<ArrayBufferLike>;
    };
    publisher: {
        id: {
            id: string | Uint8Array<ArrayBufferLike>;
        };
        package: string;
        module_name: string;
    };
}>;
export declare function init(packageAddress: string): {
    init: (options: {
        arguments: [RawTransactionArgument<string>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    initialize_walrus: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<string>, RawTransactionArgument<number | bigint>, RawTransactionArgument<number | bigint>, RawTransactionArgument<number>, RawTransactionArgument<number>, RawTransactionArgument<string>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    migrate: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<string>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
};
