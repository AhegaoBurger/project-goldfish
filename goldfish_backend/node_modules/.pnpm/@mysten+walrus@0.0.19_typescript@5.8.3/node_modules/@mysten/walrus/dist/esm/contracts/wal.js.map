{
  "version": 3,
  "sources": ["../../../src/contracts/wal.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { bcs } from '@mysten/sui/bcs';\nimport type { Transaction } from '@mysten/sui/transactions';\n\nimport * as object from './deps/0x0000000000000000000000000000000000000000000000000000000000000002/object.js';\nimport { normalizeMoveArguments } from './utils/index.js';\nimport type { RawTransactionArgument } from './utils/index.js';\n\nexport function WAL() {\n\treturn bcs.struct('WAL', {\n\t\tdummy_field: bcs.bool(),\n\t});\n}\nexport function ProtectedTreasury() {\n\treturn bcs.struct('ProtectedTreasury', {\n\t\tid: object.UID(),\n\t});\n}\nexport function TreasuryCapKey() {\n\treturn bcs.struct('TreasuryCapKey', {\n\t\tdummy_field: bcs.bool(),\n\t});\n}\nexport function init(packageAddress: string) {\n\tfunction init(options: { arguments: [RawTransactionArgument<string>] }) {\n\t\tconst argumentsTypes = [`${packageAddress}::wal::WAL`];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'wal',\n\t\t\t\tfunction: 'init',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction total_supply(options: { arguments: [RawTransactionArgument<string>] }) {\n\t\tconst argumentsTypes = [`${packageAddress}::wal::ProtectedTreasury`];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'wal',\n\t\t\t\tfunction: 'total_supply',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction burn(options: {\n\t\targuments: [RawTransactionArgument<string>, RawTransactionArgument<string>];\n\t}) {\n\t\tconst argumentsTypes = [\n\t\t\t`${packageAddress}::wal::ProtectedTreasury`,\n\t\t\t`0x0000000000000000000000000000000000000000000000000000000000000002::coin::Coin<${packageAddress}::wal::WAL>`,\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'wal',\n\t\t\t\tfunction: 'burn',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction borrow_cap(options: { arguments: [RawTransactionArgument<string>] }) {\n\t\tconst argumentsTypes = [`${packageAddress}::wal::ProtectedTreasury`];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'wal',\n\t\t\t\tfunction: 'borrow_cap',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction borrow_cap_mut(options: { arguments: [RawTransactionArgument<string>] }) {\n\t\tconst argumentsTypes = [`${packageAddress}::wal::ProtectedTreasury`];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'wal',\n\t\t\t\tfunction: 'borrow_cap_mut',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\treturn { init, total_supply, burn, borrow_cap, borrow_cap_mut };\n}\n"],
  "mappings": "AAGA,SAAS,WAAW;AAGpB,YAAY,YAAY;AACxB,SAAS,8BAA8B;AAGhC,SAAS,MAAM;AACrB,SAAO,IAAI,OAAO,OAAO;AAAA,IACxB,aAAa,IAAI,KAAK;AAAA,EACvB,CAAC;AACF;AACO,SAAS,oBAAoB;AACnC,SAAO,IAAI,OAAO,qBAAqB;AAAA,IACtC,IAAI,OAAO,IAAI;AAAA,EAChB,CAAC;AACF;AACO,SAAS,iBAAiB;AAChC,SAAO,IAAI,OAAO,kBAAkB;AAAA,IACnC,aAAa,IAAI,KAAK;AAAA,EACvB,CAAC;AACF;AACO,SAAS,KAAK,gBAAwB;AAC5C,WAASA,MAAK,SAA0D;AACvE,UAAM,iBAAiB,CAAC,GAAG,cAAc,YAAY;AACrD,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW,uBAAuB,QAAQ,WAAW,cAAc;AAAA,IACpE,CAAC;AAAA,EACH;AACA,WAAS,aAAa,SAA0D;AAC/E,UAAM,iBAAiB,CAAC,GAAG,cAAc,0BAA0B;AACnE,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW,uBAAuB,QAAQ,WAAW,cAAc;AAAA,IACpE,CAAC;AAAA,EACH;AACA,WAAS,KAAK,SAEX;AACF,UAAM,iBAAiB;AAAA,MACtB,GAAG,cAAc;AAAA,MACjB,kFAAkF,cAAc;AAAA,IACjG;AACA,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW,uBAAuB,QAAQ,WAAW,cAAc;AAAA,IACpE,CAAC;AAAA,EACH;AACA,WAAS,WAAW,SAA0D;AAC7E,UAAM,iBAAiB,CAAC,GAAG,cAAc,0BAA0B;AACnE,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW,uBAAuB,QAAQ,WAAW,cAAc;AAAA,IACpE,CAAC;AAAA,EACH;AACA,WAAS,eAAe,SAA0D;AACjF,UAAM,iBAAiB,CAAC,GAAG,cAAc,0BAA0B;AACnE,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW,uBAAuB,QAAQ,WAAW,cAAc;AAAA,IACpE,CAAC;AAAA,EACH;AACA,SAAO,EAAE,MAAAA,OAAM,cAAc,MAAM,YAAY,eAAe;AAC/D;",
  "names": ["init"]
}
