{
  "version": 3,
  "sources": ["../../../src/contracts/apportionment_queue.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { bcs } from '@mysten/sui/bcs';\nimport type { BcsType } from '@mysten/sui/bcs';\nimport type { Transaction } from '@mysten/sui/transactions';\n\nimport * as uq64_64 from './deps/0x0000000000000000000000000000000000000000000000000000000000000001/uq64_64.js';\nimport { normalizeMoveArguments } from './utils/index.js';\nimport type { RawTransactionArgument } from './utils/index.js';\n\nexport function ApportionmentQueue<T0 extends BcsType<any>>(...typeParameters: [T0]) {\n\treturn bcs.struct('ApportionmentQueue', {\n\t\tentries: bcs.vector(Entry(typeParameters[0])),\n\t});\n}\nexport function Entry<T0 extends BcsType<any>>(...typeParameters: [T0]) {\n\treturn bcs.struct('Entry', {\n\t\tpriority: uq64_64.UQ64_64(),\n\t\ttie_breaker: bcs.u64(),\n\t\tvalue: typeParameters[0],\n\t});\n}\nexport function init(packageAddress: string) {\n\tfunction _new(options: { arguments: []; typeArguments: [string] }) {\n\t\tconst argumentsTypes: string[] = [];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'apportionment_queue',\n\t\t\t\tfunction: 'new',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t\ttypeArguments: options.typeArguments,\n\t\t\t});\n\t}\n\tfunction pop_max(options: {\n\t\targuments: [RawTransactionArgument<string>];\n\t\ttypeArguments: [string];\n\t}) {\n\t\tconst argumentsTypes = [\n\t\t\t`${packageAddress}::apportionment_queue::ApportionmentQueue<${options.typeArguments[0]}>`,\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'apportionment_queue',\n\t\t\t\tfunction: 'pop_max',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t\ttypeArguments: options.typeArguments,\n\t\t\t});\n\t}\n\tfunction insert<T0 extends BcsType<any>>(options: {\n\t\targuments: [\n\t\t\tRawTransactionArgument<string>,\n\t\t\tRawTransactionArgument<string>,\n\t\t\tRawTransactionArgument<number | bigint>,\n\t\t\tRawTransactionArgument<T0>,\n\t\t];\n\t\ttypeArguments: [string];\n\t}) {\n\t\tconst argumentsTypes = [\n\t\t\t`${packageAddress}::apportionment_queue::ApportionmentQueue<${options.typeArguments[0]}>`,\n\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000001::uq64_64::UQ64_64',\n\t\t\t'u64',\n\t\t\t`${options.typeArguments[0]}`,\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'apportionment_queue',\n\t\t\t\tfunction: 'insert',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t\ttypeArguments: options.typeArguments,\n\t\t\t});\n\t}\n\tfunction bubble_down(options: {\n\t\targuments: [RawTransactionArgument<string[]>];\n\t\ttypeArguments: [string];\n\t}) {\n\t\tconst argumentsTypes = [\n\t\t\t`vector<${packageAddress}::apportionment_queue::Entry<${options.typeArguments[0]}>>`,\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'apportionment_queue',\n\t\t\t\tfunction: 'bubble_down',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t\ttypeArguments: options.typeArguments,\n\t\t\t});\n\t}\n\tfunction bubble_up(options: {\n\t\targuments: [RawTransactionArgument<string[]>];\n\t\ttypeArguments: [string];\n\t}) {\n\t\tconst argumentsTypes = [\n\t\t\t`vector<${packageAddress}::apportionment_queue::Entry<${options.typeArguments[0]}>>`,\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'apportionment_queue',\n\t\t\t\tfunction: 'bubble_up',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t\ttypeArguments: options.typeArguments,\n\t\t\t});\n\t}\n\tfunction higher_priority_than(options: {\n\t\targuments: [RawTransactionArgument<string>, RawTransactionArgument<string>];\n\t\ttypeArguments: [string];\n\t}) {\n\t\tconst argumentsTypes = [\n\t\t\t`${packageAddress}::apportionment_queue::Entry<${options.typeArguments[0]}>`,\n\t\t\t`${packageAddress}::apportionment_queue::Entry<${options.typeArguments[0]}>`,\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'apportionment_queue',\n\t\t\t\tfunction: 'higher_priority_than',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t\ttypeArguments: options.typeArguments,\n\t\t\t});\n\t}\n\treturn { _new, pop_max, insert, bubble_down, bubble_up, higher_priority_than };\n}\n"],
  "mappings": "AAGA,SAAS,WAAW;AAIpB,YAAY,aAAa;AACzB,SAAS,8BAA8B;AAGhC,SAAS,sBAA+C,gBAAsB;AACpF,SAAO,IAAI,OAAO,sBAAsB;AAAA,IACvC,SAAS,IAAI,OAAO,MAAM,eAAe,CAAC,CAAC,CAAC;AAAA,EAC7C,CAAC;AACF;AACO,SAAS,SAAkC,gBAAsB;AACvE,SAAO,IAAI,OAAO,SAAS;AAAA,IAC1B,UAAU,QAAQ,QAAQ;AAAA,IAC1B,aAAa,IAAI,IAAI;AAAA,IACrB,OAAO,eAAe,CAAC;AAAA,EACxB,CAAC;AACF;AACO,SAAS,KAAK,gBAAwB;AAC5C,WAAS,KAAK,SAAqD;AAClE,UAAM,iBAA2B,CAAC;AAClC,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW,uBAAuB,QAAQ,WAAW,cAAc;AAAA,MACnE,eAAe,QAAQ;AAAA,IACxB,CAAC;AAAA,EACH;AACA,WAAS,QAAQ,SAGd;AACF,UAAM,iBAAiB;AAAA,MACtB,GAAG,cAAc,6CAA6C,QAAQ,cAAc,CAAC,CAAC;AAAA,IACvF;AACA,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW,uBAAuB,QAAQ,WAAW,cAAc;AAAA,MACnE,eAAe,QAAQ;AAAA,IACxB,CAAC;AAAA,EACH;AACA,WAAS,OAAgC,SAQtC;AACF,UAAM,iBAAiB;AAAA,MACtB,GAAG,cAAc,6CAA6C,QAAQ,cAAc,CAAC,CAAC;AAAA,MACtF;AAAA,MACA;AAAA,MACA,GAAG,QAAQ,cAAc,CAAC,CAAC;AAAA,IAC5B;AACA,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW,uBAAuB,QAAQ,WAAW,cAAc;AAAA,MACnE,eAAe,QAAQ;AAAA,IACxB,CAAC;AAAA,EACH;AACA,WAAS,YAAY,SAGlB;AACF,UAAM,iBAAiB;AAAA,MACtB,UAAU,cAAc,gCAAgC,QAAQ,cAAc,CAAC,CAAC;AAAA,IACjF;AACA,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW,uBAAuB,QAAQ,WAAW,cAAc;AAAA,MACnE,eAAe,QAAQ;AAAA,IACxB,CAAC;AAAA,EACH;AACA,WAAS,UAAU,SAGhB;AACF,UAAM,iBAAiB;AAAA,MACtB,UAAU,cAAc,gCAAgC,QAAQ,cAAc,CAAC,CAAC;AAAA,IACjF;AACA,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW,uBAAuB,QAAQ,WAAW,cAAc;AAAA,MACnE,eAAe,QAAQ;AAAA,IACxB,CAAC;AAAA,EACH;AACA,WAAS,qBAAqB,SAG3B;AACF,UAAM,iBAAiB;AAAA,MACtB,GAAG,cAAc,gCAAgC,QAAQ,cAAc,CAAC,CAAC;AAAA,MACzE,GAAG,cAAc,gCAAgC,QAAQ,cAAc,CAAC,CAAC;AAAA,IAC1E;AACA,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW,uBAAuB,QAAQ,WAAW,cAAc;AAAA,MACnE,eAAe,QAAQ;AAAA,IACxB,CAAC;AAAA,EACH;AACA,SAAO,EAAE,MAAM,SAAS,QAAQ,aAAa,WAAW,qBAAqB;AAC9E;",
  "names": []
}
