import { bcs } from "@mysten/sui/bcs";
import * as balance from "./balance.js";
import * as object from "./object.js";
function Kiosk() {
  return bcs.struct("Kiosk", {
    id: object.UID(),
    profits: balance.Balance(),
    owner: bcs.Address,
    item_count: bcs.u32(),
    allow_extensions: bcs.bool()
  });
}
function KioskOwnerCap() {
  return bcs.struct("KioskOwnerCap", {
    id: object.UID(),
    for: bcs.Address
  });
}
function PurchaseCap() {
  return bcs.struct("PurchaseCap", {
    id: object.UID(),
    kiosk_id: bcs.Address,
    item_id: bcs.Address,
    min_price: bcs.u64()
  });
}
function Borrow() {
  return bcs.struct("Borrow", {
    kiosk_id: bcs.Address,
    item_id: bcs.Address
  });
}
function Item() {
  return bcs.struct("Item", {
    id: bcs.Address
  });
}
function Listing() {
  return bcs.struct("Listing", {
    id: bcs.Address,
    is_exclusive: bcs.bool()
  });
}
function Lock() {
  return bcs.struct("Lock", {
    id: bcs.Address
  });
}
function ItemListed() {
  return bcs.struct("ItemListed", {
    kiosk: bcs.Address,
    id: bcs.Address,
    price: bcs.u64()
  });
}
function ItemPurchased() {
  return bcs.struct("ItemPurchased", {
    kiosk: bcs.Address,
    id: bcs.Address,
    price: bcs.u64()
  });
}
function ItemDelisted() {
  return bcs.struct("ItemDelisted", {
    kiosk: bcs.Address,
    id: bcs.Address
  });
}
export {
  Borrow,
  Item,
  ItemDelisted,
  ItemListed,
  ItemPurchased,
  Kiosk,
  KioskOwnerCap,
  Listing,
  Lock,
  PurchaseCap
};
//# sourceMappingURL=kiosk.js.map
