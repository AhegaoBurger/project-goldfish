import type { Transaction } from '@mysten/sui/transactions';
import type { RawTransactionArgument } from './utils/index.js';
export declare function Exchange(): import("@mysten/sui/bcs").BcsType<{
    id: {
        id: string;
    };
    wal: {
        value: string;
    };
    sui: {
        value: string;
    };
    rate: {
        wal: string;
        sui: string;
    };
    admin: string;
}, {
    id: {
        id: string | Uint8Array<ArrayBufferLike>;
    };
    wal: {
        value: string | number | bigint;
    };
    sui: {
        value: string | number | bigint;
    };
    rate: {
        wal: string | number | bigint;
        sui: string | number | bigint;
    };
    admin: string | Uint8Array<ArrayBufferLike>;
}>;
export declare function AdminCap(): import("@mysten/sui/bcs").BcsType<{
    id: {
        id: string;
    };
}, {
    id: {
        id: string | Uint8Array<ArrayBufferLike>;
    };
}>;
export declare function ExchangeRate(): import("@mysten/sui/bcs").BcsType<{
    wal: string;
    sui: string;
}, {
    wal: string | number | bigint;
    sui: string | number | bigint;
}>;
export declare function init(packageAddress: string): {
    new_exchange_rate: (options: {
        arguments: [RawTransactionArgument<number | bigint>, RawTransactionArgument<number | bigint>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    wal_to_sui: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<number | bigint>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    sui_to_wal: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<number | bigint>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    _new: (options: {
        arguments: [];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    new_funded: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<number | bigint>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    add_wal: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<string>, RawTransactionArgument<number | bigint>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    add_sui: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<string>, RawTransactionArgument<number | bigint>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    add_all_wal: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<string>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    add_all_sui: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<string>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    check_admin: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<string>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    withdraw_wal: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<number | bigint>, RawTransactionArgument<string>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    withdraw_sui: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<number | bigint>, RawTransactionArgument<string>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    set_exchange_rate: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<number | bigint>, RawTransactionArgument<number | bigint>, RawTransactionArgument<string>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    exchange_all_for_wal: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<string>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    exchange_for_wal: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<string>, RawTransactionArgument<number | bigint>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    exchange_all_for_sui: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<string>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    exchange_for_sui: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<string>, RawTransactionArgument<number | bigint>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
};
