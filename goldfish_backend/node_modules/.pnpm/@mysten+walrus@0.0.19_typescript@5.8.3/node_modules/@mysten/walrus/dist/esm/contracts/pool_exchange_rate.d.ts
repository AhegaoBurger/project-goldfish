import type { Transaction } from '@mysten/sui/transactions';
import type { RawTransactionArgument } from './utils/index.js';
export declare function PoolExchangeRate(): import("@mysten/sui/bcs").BcsType<import("@mysten/bcs").EnumOutputShapeWithKeys<{
    Flat: true;
    Variable: [string, string];
}, "Flat" | "Variable">, import("@mysten/bcs").EnumInputShape<{
    Flat: boolean | object | null;
    Variable: readonly [string | number | bigint, string | number | bigint];
}>>;
export declare function init(packageAddress: string): {
    flat: (options: {
        arguments: [];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    _new: (options: {
        arguments: [RawTransactionArgument<number | bigint>, RawTransactionArgument<number | bigint>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    convert_to_wal_amount: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<number | bigint>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    convert_to_share_amount: (options: {
        arguments: [RawTransactionArgument<string>, RawTransactionArgument<number | bigint>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
};
