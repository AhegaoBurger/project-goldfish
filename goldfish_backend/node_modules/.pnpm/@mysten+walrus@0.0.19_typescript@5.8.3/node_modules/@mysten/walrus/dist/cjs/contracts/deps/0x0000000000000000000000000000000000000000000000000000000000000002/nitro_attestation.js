"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var nitro_attestation_exports = {};
__export(nitro_attestation_exports, {
  NitroAttestationDocument: () => NitroAttestationDocument,
  PCREntry: () => PCREntry
});
module.exports = __toCommonJS(nitro_attestation_exports);
var import_bcs = require("@mysten/sui/bcs");
function PCREntry() {
  return import_bcs.bcs.struct("PCREntry", {
    index: import_bcs.bcs.u8(),
    value: import_bcs.bcs.vector(import_bcs.bcs.u8())
  });
}
function NitroAttestationDocument() {
  return import_bcs.bcs.struct("NitroAttestationDocument", {
    module_id: import_bcs.bcs.vector(import_bcs.bcs.u8()),
    timestamp: import_bcs.bcs.u64(),
    digest: import_bcs.bcs.vector(import_bcs.bcs.u8()),
    pcrs: import_bcs.bcs.vector(PCREntry()),
    public_key: import_bcs.bcs.option(import_bcs.bcs.vector(import_bcs.bcs.u8())),
    user_data: import_bcs.bcs.option(import_bcs.bcs.vector(import_bcs.bcs.u8())),
    nonce: import_bcs.bcs.option(import_bcs.bcs.vector(import_bcs.bcs.u8()))
  });
}
//# sourceMappingURL=nitro_attestation.js.map
