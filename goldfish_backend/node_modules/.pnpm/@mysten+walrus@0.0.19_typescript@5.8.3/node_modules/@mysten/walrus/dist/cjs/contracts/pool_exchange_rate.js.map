{
  "version": 3,
  "sources": ["../../../src/contracts/pool_exchange_rate.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { bcs } from '@mysten/sui/bcs';\nimport type { Transaction } from '@mysten/sui/transactions';\n\nimport { normalizeMoveArguments } from './utils/index.js';\nimport type { RawTransactionArgument } from './utils/index.js';\n\nexport function PoolExchangeRate() {\n\treturn bcs.enum('PoolExchangeRate', {\n\t\tFlat: null,\n\t\tVariable: bcs.tuple([bcs.u128(), bcs.u128()]),\n\t});\n}\nexport function init(packageAddress: string) {\n\tfunction flat(options: { arguments: [] }) {\n\t\tconst argumentsTypes: string[] = [];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'pool_exchange_rate',\n\t\t\t\tfunction: 'flat',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction _new(options: {\n\t\targuments: [RawTransactionArgument<number | bigint>, RawTransactionArgument<number | bigint>];\n\t}) {\n\t\tconst argumentsTypes = ['u64', 'u64'];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'pool_exchange_rate',\n\t\t\t\tfunction: 'new',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction convert_to_wal_amount(options: {\n\t\targuments: [RawTransactionArgument<string>, RawTransactionArgument<number | bigint>];\n\t}) {\n\t\tconst argumentsTypes = [`${packageAddress}::pool_exchange_rate::PoolExchangeRate`, 'u64'];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'pool_exchange_rate',\n\t\t\t\tfunction: 'convert_to_wal_amount',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction convert_to_share_amount(options: {\n\t\targuments: [RawTransactionArgument<string>, RawTransactionArgument<number | bigint>];\n\t}) {\n\t\tconst argumentsTypes = [`${packageAddress}::pool_exchange_rate::PoolExchangeRate`, 'u64'];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'pool_exchange_rate',\n\t\t\t\tfunction: 'convert_to_share_amount',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\treturn { flat, _new, convert_to_wal_amount, convert_to_share_amount };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,iBAAoB;AAGpB,mBAAuC;AAGhC,SAAS,mBAAmB;AAClC,SAAO,eAAI,KAAK,oBAAoB;AAAA,IACnC,MAAM;AAAA,IACN,UAAU,eAAI,MAAM,CAAC,eAAI,KAAK,GAAG,eAAI,KAAK,CAAC,CAAC;AAAA,EAC7C,CAAC;AACF;AACO,SAAS,KAAK,gBAAwB;AAC5C,WAAS,KAAK,SAA4B;AACzC,UAAM,iBAA2B,CAAC;AAClC,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,eAAW,qCAAuB,QAAQ,WAAW,cAAc;AAAA,IACpE,CAAC;AAAA,EACH;AACA,WAAS,KAAK,SAEX;AACF,UAAM,iBAAiB,CAAC,OAAO,KAAK;AACpC,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,eAAW,qCAAuB,QAAQ,WAAW,cAAc;AAAA,IACpE,CAAC;AAAA,EACH;AACA,WAAS,sBAAsB,SAE5B;AACF,UAAM,iBAAiB,CAAC,GAAG,cAAc,0CAA0C,KAAK;AACxF,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,eAAW,qCAAuB,QAAQ,WAAW,cAAc;AAAA,IACpE,CAAC;AAAA,EACH;AACA,WAAS,wBAAwB,SAE9B;AACF,UAAM,iBAAiB,CAAC,GAAG,cAAc,0CAA0C,KAAK;AACxF,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,eAAW,qCAAuB,QAAQ,WAAW,cAAc;AAAA,IACpE,CAAC;AAAA,EACH;AACA,SAAO,EAAE,MAAM,MAAM,uBAAuB,wBAAwB;AACrE;",
  "names": []
}
