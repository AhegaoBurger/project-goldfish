import { bcs } from "@mysten/sui/bcs";
import * as bag from "./bag.js";
import * as object from "./object.js";
import * as table from "./table.js";
function DenyList() {
  return bcs.struct("DenyList", {
    id: object.UID(),
    lists: bag.Bag()
  });
}
function ConfigWriteCap() {
  return bcs.struct("ConfigWriteCap", {
    dummy_field: bcs.bool()
  });
}
function ConfigKey() {
  return bcs.struct("ConfigKey", {
    per_type_index: bcs.u64(),
    per_type_key: bcs.vector(bcs.u8())
  });
}
function AddressKey() {
  return bcs.struct("AddressKey", {
    pos0: bcs.Address
  });
}
function GlobalPauseKey() {
  return bcs.struct("GlobalPauseKey", {
    dummy_field: bcs.bool()
  });
}
function PerTypeConfigCreated() {
  return bcs.struct("PerTypeConfigCreated", {
    key: ConfigKey(),
    config_id: bcs.Address
  });
}
function PerTypeList() {
  return bcs.struct("PerTypeList", {
    id: object.UID(),
    denied_count: table.Table(),
    denied_addresses: table.Table()
  });
}
export {
  AddressKey,
  ConfigKey,
  ConfigWriteCap,
  DenyList,
  GlobalPauseKey,
  PerTypeConfigCreated,
  PerTypeList
};
//# sourceMappingURL=deny_list.js.map
