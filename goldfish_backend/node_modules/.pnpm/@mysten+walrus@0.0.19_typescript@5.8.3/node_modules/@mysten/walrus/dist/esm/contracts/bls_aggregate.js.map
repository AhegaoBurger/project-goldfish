{
  "version": 3,
  "sources": ["../../../src/contracts/bls_aggregate.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { bcs } from '@mysten/sui/bcs';\nimport type { Transaction } from '@mysten/sui/transactions';\n\nimport * as group_ops from './deps/0x0000000000000000000000000000000000000000000000000000000000000002/group_ops.js';\nimport { normalizeMoveArguments } from './utils/index.js';\nimport type { RawTransactionArgument } from './utils/index.js';\n\nexport function BlsCommitteeMember() {\n\treturn bcs.struct('BlsCommitteeMember', {\n\t\tpublic_key: group_ops.Element(),\n\t\tweight: bcs.u16(),\n\t\tnode_id: bcs.Address,\n\t});\n}\nexport function BlsCommittee() {\n\treturn bcs.struct('BlsCommittee', {\n\t\tmembers: bcs.vector(BlsCommitteeMember()),\n\t\tn_shards: bcs.u16(),\n\t\tepoch: bcs.u32(),\n\t\ttotal_aggregated_key: group_ops.Element(),\n\t});\n}\nexport function RequiredWeight() {\n\treturn bcs.enum('RequiredWeight', {\n\t\tQuorum: null,\n\t\tOneCorrectNode: null,\n\t});\n}\nexport function init(packageAddress: string) {\n\tfunction new_bls_committee(options: {\n\t\targuments: [RawTransactionArgument<number>, RawTransactionArgument<string[]>];\n\t}) {\n\t\tconst argumentsTypes = ['u32', `vector<${packageAddress}::bls_aggregate::BlsCommitteeMember>`];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'bls_aggregate',\n\t\t\t\tfunction: 'new_bls_committee',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction new_bls_committee_member(options: {\n\t\targuments: [\n\t\t\tRawTransactionArgument<string>,\n\t\t\tRawTransactionArgument<number>,\n\t\t\tRawTransactionArgument<string>,\n\t\t];\n\t}) {\n\t\tconst argumentsTypes = [\n\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000002::group_ops::Element<0x0000000000000000000000000000000000000000000000000000000000000002::bls12381::UncompressedG1>',\n\t\t\t'u16',\n\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000002::object::ID',\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'bls_aggregate',\n\t\t\t\tfunction: 'new_bls_committee_member',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction node_id(options: { arguments: [RawTransactionArgument<string>] }) {\n\t\tconst argumentsTypes = [`${packageAddress}::bls_aggregate::BlsCommitteeMember`];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'bls_aggregate',\n\t\t\t\tfunction: 'node_id',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction epoch(options: { arguments: [RawTransactionArgument<string>] }) {\n\t\tconst argumentsTypes = [`${packageAddress}::bls_aggregate::BlsCommittee`];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'bls_aggregate',\n\t\t\t\tfunction: 'epoch',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction n_shards(options: { arguments: [RawTransactionArgument<string>] }) {\n\t\tconst argumentsTypes = [`${packageAddress}::bls_aggregate::BlsCommittee`];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'bls_aggregate',\n\t\t\t\tfunction: 'n_shards',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction n_members(options: { arguments: [RawTransactionArgument<string>] }) {\n\t\tconst argumentsTypes = [`${packageAddress}::bls_aggregate::BlsCommittee`];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'bls_aggregate',\n\t\t\t\tfunction: 'n_members',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction get_idx(options: {\n\t\targuments: [RawTransactionArgument<string>, RawTransactionArgument<number | bigint>];\n\t}) {\n\t\tconst argumentsTypes = [`${packageAddress}::bls_aggregate::BlsCommittee`, 'u64'];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'bls_aggregate',\n\t\t\t\tfunction: 'get_idx',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction contains(options: {\n\t\targuments: [RawTransactionArgument<string>, RawTransactionArgument<string>];\n\t}) {\n\t\tconst argumentsTypes = [\n\t\t\t`${packageAddress}::bls_aggregate::BlsCommittee`,\n\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000002::object::ID',\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'bls_aggregate',\n\t\t\t\tfunction: 'contains',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction get_member_weight(options: {\n\t\targuments: [RawTransactionArgument<string>, RawTransactionArgument<string>];\n\t}) {\n\t\tconst argumentsTypes = [\n\t\t\t`${packageAddress}::bls_aggregate::BlsCommittee`,\n\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000002::object::ID',\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'bls_aggregate',\n\t\t\t\tfunction: 'get_member_weight',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction find_index(options: {\n\t\targuments: [RawTransactionArgument<string>, RawTransactionArgument<string>];\n\t}) {\n\t\tconst argumentsTypes = [\n\t\t\t`${packageAddress}::bls_aggregate::BlsCommittee`,\n\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000002::object::ID',\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'bls_aggregate',\n\t\t\t\tfunction: 'find_index',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction to_vec_map(options: { arguments: [RawTransactionArgument<string>] }) {\n\t\tconst argumentsTypes = [`${packageAddress}::bls_aggregate::BlsCommittee`];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'bls_aggregate',\n\t\t\t\tfunction: 'to_vec_map',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction verify_quorum_in_epoch(options: {\n\t\targuments: [\n\t\t\tRawTransactionArgument<string>,\n\t\t\tRawTransactionArgument<number[]>,\n\t\t\tRawTransactionArgument<number[]>,\n\t\t\tRawTransactionArgument<number[]>,\n\t\t];\n\t}) {\n\t\tconst argumentsTypes = [\n\t\t\t`${packageAddress}::bls_aggregate::BlsCommittee`,\n\t\t\t'vector<u8>',\n\t\t\t'vector<u8>',\n\t\t\t'vector<u8>',\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'bls_aggregate',\n\t\t\t\tfunction: 'verify_quorum_in_epoch',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction is_quorum(options: {\n\t\targuments: [RawTransactionArgument<string>, RawTransactionArgument<number>];\n\t}) {\n\t\tconst argumentsTypes = [`${packageAddress}::bls_aggregate::BlsCommittee`, 'u16'];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'bls_aggregate',\n\t\t\t\tfunction: 'is_quorum',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction verify_one_correct_node_in_epoch(options: {\n\t\targuments: [\n\t\t\tRawTransactionArgument<string>,\n\t\t\tRawTransactionArgument<number[]>,\n\t\t\tRawTransactionArgument<number[]>,\n\t\t\tRawTransactionArgument<number[]>,\n\t\t];\n\t}) {\n\t\tconst argumentsTypes = [\n\t\t\t`${packageAddress}::bls_aggregate::BlsCommittee`,\n\t\t\t'vector<u8>',\n\t\t\t'vector<u8>',\n\t\t\t'vector<u8>',\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'bls_aggregate',\n\t\t\t\tfunction: 'verify_one_correct_node_in_epoch',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction includes_one_correct_node(options: {\n\t\targuments: [RawTransactionArgument<string>, RawTransactionArgument<number>];\n\t}) {\n\t\tconst argumentsTypes = [`${packageAddress}::bls_aggregate::BlsCommittee`, 'u16'];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'bls_aggregate',\n\t\t\t\tfunction: 'includes_one_correct_node',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction verify_certificate_and_weight(options: {\n\t\targuments: [\n\t\t\tRawTransactionArgument<string>,\n\t\t\tRawTransactionArgument<number[]>,\n\t\t\tRawTransactionArgument<number[]>,\n\t\t\tRawTransactionArgument<number[]>,\n\t\t\tRawTransactionArgument<string>,\n\t\t];\n\t}) {\n\t\tconst argumentsTypes = [\n\t\t\t`${packageAddress}::bls_aggregate::BlsCommittee`,\n\t\t\t'vector<u8>',\n\t\t\t'vector<u8>',\n\t\t\t'vector<u8>',\n\t\t\t`${packageAddress}::bls_aggregate::RequiredWeight`,\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'bls_aggregate',\n\t\t\t\tfunction: 'verify_certificate_and_weight',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\treturn {\n\t\tnew_bls_committee,\n\t\tnew_bls_committee_member,\n\t\tnode_id,\n\t\tepoch,\n\t\tn_shards,\n\t\tn_members,\n\t\tget_idx,\n\t\tcontains,\n\t\tget_member_weight,\n\t\tfind_index,\n\t\tto_vec_map,\n\t\tverify_quorum_in_epoch,\n\t\tis_quorum,\n\t\tverify_one_correct_node_in_epoch,\n\t\tincludes_one_correct_node,\n\t\tverify_certificate_and_weight,\n\t};\n}\n"],
  "mappings": "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",
  "names": []
}
