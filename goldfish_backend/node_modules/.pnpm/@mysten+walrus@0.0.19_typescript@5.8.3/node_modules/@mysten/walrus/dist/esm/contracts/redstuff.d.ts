import type { Transaction } from '@mysten/sui/transactions';
import type { RawTransactionArgument } from './utils/index.js';
export declare function init(packageAddress: string): {
    encoded_blob_length: (options: {
        arguments: [RawTransactionArgument<number | bigint>, RawTransactionArgument<number>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    source_symbols_primary: (options: {
        arguments: [RawTransactionArgument<number>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    source_symbols_secondary: (options: {
        arguments: [RawTransactionArgument<number>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    n_source_symbols: (options: {
        arguments: [RawTransactionArgument<number>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    symbol_size: (options: {
        arguments: [RawTransactionArgument<number | bigint>, RawTransactionArgument<number>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    metadata_size: (options: {
        arguments: [RawTransactionArgument<number>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    max_byzantine: (options: {
        arguments: [RawTransactionArgument<number>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
};
