import type { Transaction } from '@mysten/sui/transactions';
import type { RawTransactionArgument } from './utils/index.js';
export declare function EpochParams(): import("@mysten/sui/bcs").BcsType<{
    total_capacity_size: string;
    storage_price_per_unit_size: string;
    write_price_per_unit_size: string;
}, {
    total_capacity_size: string | number | bigint;
    storage_price_per_unit_size: string | number | bigint;
    write_price_per_unit_size: string | number | bigint;
}>;
export declare function init(packageAddress: string): {
    _new: (options: {
        arguments: [RawTransactionArgument<number | bigint>, RawTransactionArgument<number | bigint>, RawTransactionArgument<number | bigint>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    capacity: (options: {
        arguments: [RawTransactionArgument<string>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    storage_price: (options: {
        arguments: [RawTransactionArgument<string>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
    write_price: (options: {
        arguments: [RawTransactionArgument<string>];
    }) => (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
};
