{
  "version": 3,
  "sources": ["../../../src/contracts/auth.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { bcs } from '@mysten/sui/bcs';\nimport type { BcsType } from '@mysten/sui/bcs';\nimport type { Transaction } from '@mysten/sui/transactions';\n\nimport { normalizeMoveArguments } from './utils/index.js';\nimport type { RawTransactionArgument } from './utils/index.js';\n\nexport function Authenticated() {\n\treturn bcs.enum('Authenticated', {\n\t\tSender: bcs.Address,\n\t\tObject: bcs.Address,\n\t});\n}\nexport function Authorized() {\n\treturn bcs.enum('Authorized', {\n\t\tAddress: bcs.Address,\n\t\tObjectID: bcs.Address,\n\t});\n}\nexport function init(packageAddress: string) {\n\tfunction authenticate_sender(options: { arguments: [] }) {\n\t\tconst argumentsTypes: string[] = [];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'auth',\n\t\t\t\tfunction: 'authenticate_sender',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction authenticate_with_object<T0 extends BcsType<any>>(options: {\n\t\targuments: [RawTransactionArgument<T0>];\n\t\ttypeArguments: [string];\n\t}) {\n\t\tconst argumentsTypes = [`${options.typeArguments[0]}`];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'auth',\n\t\t\t\tfunction: 'authenticate_with_object',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t\ttypeArguments: options.typeArguments,\n\t\t\t});\n\t}\n\tfunction authorized_address(options: { arguments: [RawTransactionArgument<string>] }) {\n\t\tconst argumentsTypes = ['address'];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'auth',\n\t\t\t\tfunction: 'authorized_address',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction authorized_object(options: { arguments: [RawTransactionArgument<string>] }) {\n\t\tconst argumentsTypes = [\n\t\t\t'0x0000000000000000000000000000000000000000000000000000000000000002::object::ID',\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'auth',\n\t\t\t\tfunction: 'authorized_object',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\tfunction matches(options: {\n\t\targuments: [RawTransactionArgument<string>, RawTransactionArgument<string>];\n\t}) {\n\t\tconst argumentsTypes = [\n\t\t\t`${packageAddress}::auth::Authenticated`,\n\t\t\t`${packageAddress}::auth::Authorized`,\n\t\t];\n\t\treturn (tx: Transaction) =>\n\t\t\ttx.moveCall({\n\t\t\t\tpackage: packageAddress,\n\t\t\t\tmodule: 'auth',\n\t\t\t\tfunction: 'matches',\n\t\t\t\targuments: normalizeMoveArguments(options.arguments, argumentsTypes),\n\t\t\t});\n\t}\n\treturn {\n\t\tauthenticate_sender,\n\t\tauthenticate_with_object,\n\t\tauthorized_address,\n\t\tauthorized_object,\n\t\tmatches,\n\t};\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,iBAAoB;AAIpB,mBAAuC;AAGhC,SAAS,gBAAgB;AAC/B,SAAO,eAAI,KAAK,iBAAiB;AAAA,IAChC,QAAQ,eAAI;AAAA,IACZ,QAAQ,eAAI;AAAA,EACb,CAAC;AACF;AACO,SAAS,aAAa;AAC5B,SAAO,eAAI,KAAK,cAAc;AAAA,IAC7B,SAAS,eAAI;AAAA,IACb,UAAU,eAAI;AAAA,EACf,CAAC;AACF;AACO,SAAS,KAAK,gBAAwB;AAC5C,WAAS,oBAAoB,SAA4B;AACxD,UAAM,iBAA2B,CAAC;AAClC,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,eAAW,qCAAuB,QAAQ,WAAW,cAAc;AAAA,IACpE,CAAC;AAAA,EACH;AACA,WAAS,yBAAkD,SAGxD;AACF,UAAM,iBAAiB,CAAC,GAAG,QAAQ,cAAc,CAAC,CAAC,EAAE;AACrD,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,eAAW,qCAAuB,QAAQ,WAAW,cAAc;AAAA,MACnE,eAAe,QAAQ;AAAA,IACxB,CAAC;AAAA,EACH;AACA,WAAS,mBAAmB,SAA0D;AACrF,UAAM,iBAAiB,CAAC,SAAS;AACjC,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,eAAW,qCAAuB,QAAQ,WAAW,cAAc;AAAA,IACpE,CAAC;AAAA,EACH;AACA,WAAS,kBAAkB,SAA0D;AACpF,UAAM,iBAAiB;AAAA,MACtB;AAAA,IACD;AACA,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,eAAW,qCAAuB,QAAQ,WAAW,cAAc;AAAA,IACpE,CAAC;AAAA,EACH;AACA,WAAS,QAAQ,SAEd;AACF,UAAM,iBAAiB;AAAA,MACtB,GAAG,cAAc;AAAA,MACjB,GAAG,cAAc;AAAA,IAClB;AACA,WAAO,CAAC,OACP,GAAG,SAAS;AAAA,MACX,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,eAAW,qCAAuB,QAAQ,WAAW,cAAc;AAAA,IACpE,CAAC;AAAA,EACH;AACA,SAAO;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACD;",
  "names": []
}
